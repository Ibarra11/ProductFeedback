generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  Feature
  UX
  UI
  Enhancement
  Bug
}

enum Status {
  live
  in_progress
  planned
  suggestion
}

model User {
  user_id  Int       @id @default(autoincrement())
  image    String
  name     String
  username String    @unique
  posts    Post[]
  comments Comment[]
  Upvotes  Upvotes[]
}

model Post {
  post_id    Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  title      String
  content    String
  category   Category
  status     Status    @default(suggestion)
  comments   Comment[]
  User       User      @relation(fields: [user_fk_id], references: [user_id])
  user_fk_id Int
  upvotes    Upvotes[]

  @@unique([post_id, user_fk_id])
}

model Upvotes {
  upvote_id  Int  @id @default(autoincrement())
  post_fk_id Int
  Post       Post @relation(fields: [post_fk_id], references: [post_id], onDelete: Cascade)
  user_fk_id Int
  User       User @relation(fields: [user_fk_id], references: [user_id], onDelete: Cascade)

  @@unique([post_fk_id, user_fk_id])
}

model Comment {
  comment_id      Int       @id @default(autoincrement())
  replyingTo      String?
  createdAt       DateTime  @default(now())
  content         String
  Post            Post      @relation(fields: [post_fk_id], references: [post_id], onDelete: Cascade)
  post_fk_id      Int
  User            User      @relation(fields: [user_fk_id], references: [user_id])
  user_fk_id      Int
  replies         Comment[] @relation("replies")
  repliesRelation Comment[] @relation("replies")
}
